; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -verify-machineinstrs -mtriple=powerpc64le-unknown-linux-gnu \
; RUN:   -mcpu=pwr9 < %s | FileCheck %s
; RUN: llc -verify-machineinstrs -mtriple=powerpc64-unknown-linux-gnu \
; RUN:   -mcpu=pwr9 < %s | FileCheck %s
; RUN: llc -verify-machineinstrs -mtriple=powerpc64-unknown-aix \
; RUN:   -mcpu=pwr9 < %s | FileCheck %s

; tdw
declare void @llvm.ppc.tdw(i64 %a, i64 %b, i32 immarg)
define dso_local void @test__tdwlgt(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 1)
  ret void
}

define dso_local void @test__tdwllt(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 2)
  ret void
}

define dso_local void @test__tdweq(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 4)
  ret void
}

define dso_local void @test__tdwlge(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 5)
  ret void
}

define dso_local void @test__tdwlle(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 6)
  ret void
}

define dso_local void @test__tdwgt(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 8)
  ret void
}

define dso_local void @test__tdwge(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 12)
  ret void
}

define dso_local void @test__tdwlt(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 16)
  ret void
}

define dso_local void @test__tdwle(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 20)
  ret void
}

define dso_local void @test__tdwne24(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 24)
  ret void
}

define dso_local void @test__tdweq31(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 31)
  ret void
}

define dso_local void @test__tdw_no_match(i64 %a, i64 %b) {
  call void @llvm.ppc.tdw(i64 %a, i64 %b, i32 13)
  ret void
}

; trapd
declare void @llvm.ppc.trapd(i64 %a)
define dso_local void @test__trapd(i64 %a) {
  call void @llvm.ppc.trapd(i64 %a)
  ret void
}